{"version":3,"file":"index.cjs","sources":["../src/util/index.js","../src/index.js"],"sourcesContent":["export const shallowEqual = (objA, objB) => {\r\n  if (objA === objB) return true;\r\n  if (\r\n    typeof objA !== \"object\" ||\r\n    objA === null ||\r\n    typeof objB !== \"object\" ||\r\n    objB === null\r\n  ) {\r\n    return false;\r\n  }\r\n\r\n  for (const key in objA) {\r\n    if (objA.hasOwnProperty(key)) {\r\n      if (!objB.hasOwnProperty(key) || objA[key] !== objB[key]) {\r\n        return false;\r\n      }\r\n    }\r\n  }\r\n\r\n  for (const key in objB) {\r\n    if (objB.hasOwnProperty(key) && !objA.hasOwnProperty(key)) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nexport const deepMerge = (target, source) => {\r\n  const result = { ...target };\r\n  for (const key in source) {\r\n    if (typeof source[key] === \"object\" && source[key] !== null) {\r\n      result[key] = deepMerge(target[key] || {}, source[key]);\r\n    } else {\r\n      result[key] = source[key];\r\n    }\r\n  }\r\n  return result;\r\n};\r\n","import { useEffect, useState } from \"react\";\r\nimport { deepMerge, shallowEqual } from \"./util\";\r\n\r\nexport const createStore = (initializeStore, middleware = (store) => store) => {\r\n  let state = initializeStore(null);\r\n  let listeners = new Set();\r\n  let stateInitializer = initializeStore;\r\n\r\n  const getState = () => {\r\n    if (state === undefined) {\r\n      state = stateInitializer(null);\r\n      stateInitializer = null;\r\n    }\r\n    return state;\r\n  };\r\n\r\n  const setState = (newState) => {\r\n    const updatedState = deepMerge(state, newState);\r\n    if (shallowEqual(state, updatedState)) return;\r\n    state = updatedState;\r\n    listeners.forEach((listener) => listener(state));\r\n  };\r\n\r\n  const subscribe = (listener) => {\r\n    listeners.add(listener);\r\n    return () => {\r\n      listeners.delete(listener);\r\n    };\r\n  };\r\n\r\n  const actions = {};\r\n  for (const [key, action] of Object.entries(initializeStore(state))) {\r\n    if (typeof action === \"function\") {\r\n      actions[key] = (...args) => {\r\n        const updater = action(...args);\r\n        const newState = updater(state);\r\n        setState(newState);\r\n      };\r\n    }\r\n  }\r\n\r\n  return (selector = getState) => {\r\n    const [currentState, setCurrentState] = useState(selector(getState()));\r\n\r\n    useEffect(() => {\r\n      const listener = (newState) => {\r\n        const selectedState = selector(newState);\r\n        if (!shallowEqual(currentState, selectedState)) {\r\n          // Update state only if it has changed\r\n          setCurrentState(selectedState);\r\n        }\r\n      };\r\n\r\n      // Subscribe to the store\r\n      const unsubscribe = subscribe(listener);\r\n\r\n      // Clean up subscription\r\n      return () => {\r\n        unsubscribe();\r\n      };\r\n    }, [selector]);\r\n\r\n    return { ...currentState, ...actions, getState, setState, subscribe };\r\n  };\r\n};\r\n"],"names":["shallowEqual","objA","objB","key","hasOwnProperty","deepMerge","target","source","result","_extends","initializeStore","middleware","state","listeners","Set","stateInitializer","getState","undefined","setState","newState","updatedState","forEach","listener","subscribe","add","actions","_loop","_Object$entries$_i","_Object$entries","_i","action","apply","slice","call","arguments","updater","Object","entries","length","selector","_useState","useState","currentState","setCurrentState","useEffect","unsubscribe","selectedState"],"mappings":"2PAAO,IAAMA,EAAe,SAACC,EAAMC,GACjC,GAAID,IAASC,EAAM,OAAO,EAC1B,GACkB,iBAATD,GACE,OAATA,GACgB,iBAATC,GACE,OAATA,EAEA,SAGF,IAAK,IAAMC,KAAOF,EAChB,GAAIA,EAAKG,eAAeD,MACjBD,EAAKE,eAAeD,IAAQF,EAAKE,KAASD,EAAKC,IAClD,OACF,EAIJ,IAAK,IAAMA,KAAOD,EAChB,GAAIA,EAAKE,eAAeD,KAASF,EAAKG,eAAeD,GACnD,OACF,EAGF,OAAO,CACT,EAEaE,EAAY,SAAZA,EAAaC,EAAQC,GAChC,IAAMC,EAAMC,EAAQH,GAAAA,GACpB,IAAK,IAAMH,KAAOI,EAEdC,EAAOL,GADkB,iBAAhBI,EAAOJ,IAAqC,OAAhBI,EAAOJ,GAC9BE,EAAUC,EAAOH,IAAQ,GAAII,EAAOJ,IAEpCI,EAAOJ,GAGzB,OAAOK,CACT,sBCnC2B,SAACE,EAAiBC,GA4B3C,IA3BA,IAAIC,EAAQF,EAAgB,MACxBG,EAAY,IAAIC,IAChBC,EAAmBL,EAEjBM,EAAW,WAKf,YAJcC,IAAVL,IACFA,EAAQG,EAAiB,MACzBA,EAAmB,MAEdH,CACT,EAEMM,EAAW,SAACC,GAChB,IAAMC,EAAef,EAAUO,EAAOO,GAClCnB,EAAaY,EAAOQ,KACxBR,EAAQQ,EACRP,EAAUQ,QAAQ,SAACC,GAAQ,OAAKA,EAASV,EAAM,GACjD,EAEMW,EAAY,SAACD,GAEjB,OADAT,EAAUW,IAAIF,GACP,WACLT,EAAS,OAAQS,EACnB,CACF,EAEMG,EAAU,CAAA,EAAGC,aACd,IAAAC,EAAAC,EAAAC,GAAYC,EAAMH,EAAA,GACC,mBAAXG,IACTL,EAFWE,EAAEG,IAEE,WACb,IACMX,EADUW,EAAMC,WAAAC,EAAAA,GAAAA,MAAAC,KAAAC,WACLC,CAAQvB,GACzBM,EAASC,EACX,EAEJ,EARAU,EAAAD,EAAAA,EAA4BQ,OAAOC,QAAQ3B,EAAgBE,IAAOiB,EAAAD,EAAAU,OAAAT,IAAAH,IAUlE,OAAQa,SAAAA,YAAAA,IAAAA,EAAWvB,GACjB,IAAAwB,EAAwCC,WAASF,EAASvB,MAAnD0B,EAAYF,EAAA,GAAEG,EAAeH,KAoBpC,OAlBAI,YAAU,WACR,IASMC,EAActB,EATH,SAACJ,GAChB,IAAM2B,EAAgBP,EAASpB,GAC1BnB,EAAa0C,EAAcI,IAE9BH,EAAgBG,EAEpB,GAMA,kBACED,GACF,CACF,EAAG,CAACN,IAEJ9B,EAAA,CAAA,EAAYiC,EAAiBjB,GAAST,SAAAA,EAAUE,SAAAA,EAAUK,UAAAA,GAC5D,CACF"}